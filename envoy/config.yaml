admin:
  address: 
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
    - name: main_listener
      address: { socket_address: { address: 0.0.0.0, port_value: 8080 }}
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress_http
                route_config:
                  name: user_services_route
                  virtual_hosts:
                    - name: user_service
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/users/" }
                          route:
                            weighted_clusters:
                              clusters:
                                - name: service_v1
                                  weight: 70
                                - name: service_v2
                                  weight: 30
                              total_weight: 100
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
    - name: service_v1
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: service_v1
        endpoints: 
          - lb_endpoints:
            - endpoint:
                address: { socket_address: { address: service-v1, port_value: 8081 }}

    - name: service_v2
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: service_v2
        endpoints: 
          - lb_endpoints:
            - endpoint:
                address: { socket_address: { address: service-v2, port_value: 8082 }}